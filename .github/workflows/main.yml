name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: |
        docker build -t akiru091/flask-app:latest .

    - name: Save Docker image as a tar file
      run: |
        docker save -o flask-app.tar akiru091/flask-app:latest

    - name: Upload image to cache
      uses: actions/upload-artifact@v3
      with:
        name: flask-app-image
        path: flask-app.tar

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Pull Docker image
      run: |
        docker pull akiru091/flask-app:latest

    - name: Run tests inside Docker container
      run: |
        docker run --rm akiru091/flask-app:latest pytest src/

  deploy:
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Install Kind
      run: |
        curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
        chmod +x ./kind
        sudo mv ./kind /usr/local/bin/kind

    - name: Create Kubernetes Cluster
      run: |
        kind create cluster --name ci-cluster
        kubectl cluster-info

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Download and load Docker image
      uses: actions/download-artifact@v3
      with:
        name: flask-app-image

    - name: Load Docker image into Kind
      run: |
        docker load -i flask-app.tar

    - name: Load Docker image into Kind
      run: |
        kind load docker-image akiru091/flask-app:latest --name ci-cluster

    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f k8s/deployment.yaml --validate=false
        kubectl apply -f k8s/service.yaml --validate=false

    - name: Verify Deployment
      run: |
        kubectl get pods --context kind-ci-cluster

    - name: Wait for Pod to be Ready
      run: |
        kubectl wait --for=condition=ready pod -l app=flask-app --timeout=60s --context kind-ci-cluster
        kubectl get pods --context kind-ci-cluster

    - name: Get Logs from Pod
      run: |
        POD_NAME=$(kubectl get pods -l app=flask-app --context kind-ci-cluster -o jsonpath='{.items[0].metadata.name}')
        kubectl logs $POD_NAME --context kind-ci-cluster

    - name: Test application health
      run: |
        curl http://localhost:5000 || exit 1

