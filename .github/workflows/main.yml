name: CI/CD Pipeline

on:
  push:
    branches:
      - master  # Trigger pipeline on push to master branch

jobs:
  test:
    runs-on: ubuntu-latest  # Use Ubuntu runner

    steps:
    - name: Checkout code
      uses: actions/checkout@v3  # Checkout the code

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'  # Setup Python version for the project

    - name: Install dependencies
      run: pip install -r requirements.txt  # Install Python dependencies

    - name: Run tests
      run: pytest src/  # Run tests using pytest

  build:
    runs-on: ubuntu-latest  # Use Ubuntu runner
    needs: test  # Build job depends on the test job

    steps:
    - name: Checkout code
      uses: actions/checkout@v3  # Checkout the code

    - name: Log in to Docker Hub
      uses: docker/login-action@v2  # Login to Docker Hub
      with:
        username: ${{ secrets.DOCKER_USERNAME }}  # Docker username
        password: ${{ secrets.DOCKER_PASSWORD }}  # Docker password

    - name: Build and push Docker image
      run: |
        docker build -t akiru091/flask-app:latest .  # Build the Docker image
        docker push akiru091/flask-app:latest  # Push the Docker image to Docker Hub

  deploy:
    runs-on: ubuntu-latest  # Use Ubuntu runner
    needs: build  # Deploy job depends on build job

    steps:
    - name: Checkout code
      uses: actions/checkout@v3  # Checkout the code

    - name: Set up Kubectl
      uses: azure/setup-kubectl@v3  # Install kubectl
      with:
        version: 'latest'  # Use the latest version of kubectl

    - name: Authenticate with Kubernetes Cluster
      run: |
        mkdir -p ~/.kube  # Ensure the .kube directory exists
        echo "${{ secrets.KUBECONFIG_CONTENT }}" > ~/.kube/config  # Write the Kubeconfig file

    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f k8s/deployment.yaml --validate=false  # Deploy the app to Kubernetes using the deployment YAML file
        kubectl apply -f k8s/service.yaml --validate=false  # Apply service YAML to expose the app

    - name: Verify Deployment
      run: kubectl get pods  # Verify the deployment by listing the pods
